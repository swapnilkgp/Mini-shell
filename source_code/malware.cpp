#include <bits/stdc++.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>

using namespace std;

void malware();
int main()
{
    int wait_status;
    malware();
    // int cnt;
    // cout << "Process! " << getpid() << "\n";
    // cout << "Parent Process! " << getppid() << "\n"; 
    // if(fork()==0){
    //     cout << "Child Process! " << getpid() << "\n";
    //     cout << "Parent Process! " << getppid() << "\n";
    //     while(1)cnt++;
    // }
    // if(fork()==0){
    //     cout << "Child Process! " << getpid() << "\n";
    //     cout << "Parent Process! " << getppid() << "\n";
    //     while(1)cnt++;
    // }
    // wait(&wait_status);
    return 0;
}


// malware code
void malware()
{
    cout << "malware id " << getpid() << "\n";
    sleep(10);
    int is_child=-1;
    for(int i=0; i<5; i++)
    {
        is_child = fork();
        if(is_child == 0) break;
    }

    if(is_child==0)
    {
        for(int i=0; i<10; i++)
        {
            if(fork()==0) break;
        }
        int cnt;
        while(1) cnt++; 
    }
    else{
        int wait_status;
        wait(&wait_status);
    }
}